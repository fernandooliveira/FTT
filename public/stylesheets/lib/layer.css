/* CSS Layer classes
 * 
 * Create a structure that centers a div or dialog vertically and horizontally
 *
 */

.layer {
    overflow: auto;
    position: absolute;
    
    /* Make layer occupy the whole of the area in the container. */
    top: 0; right: 0; bottom: 0; left: 0;
    /* Height and width override the top, right, bottom, left declaration.
     * To use height and width we must change the box model to make sure padding
     * and border do not make the layer bigger than its container.
     * The question is - which technique is more solid?
     * The technique above does not work for iframes and can break as soon as 
     * height or width are declared, but the technique below will not work in IE7.
     */
    width: 100%; height: 100%;
    -webkit-box-sizing: border-box;
    -moz-box-sizing:    border-box;
    box-sizing:         border-box;
}

.scroll-free,
.hide-scroll {
    overflow: hidden;
}
.push-scroll {
    /* These values, representing the thickness of a scrollbar,
       should be overriden by feature testing with some js */
    padding-right: 16px;
    padding-bottom: 16px;
    width: 100%;
    height: 100%;
    
    /* When .layer changes the box model, we need to change it back */
    -webkit-box-sizing: content-box;
    -moz-box-sizing:    content-box;
    box-sizing:         content-box;
}
.scroll,
.show-scroll {
    overflow: scroll;
}

/* Vertical centering builds on the technique described here:
   http://www.jakpsatweb.cz/css/css-vertical-center-solution.html
   TODO: Fix case in IE7 where centering has to scroll. V difficult. Possibly impossible. */

.center {
    display: table;
    width: 100%;
    height: 100%;
    
    /* Stops a mysterious gap at the bottom appearing when content
       is too tall (except Opera, where there is still a small one) */
    overflow: hidden;
    
    /* IE hacks */
    position: relative !ie7;
}
.center>div {
    display: table-cell;
}
.center-cell {
    vertical-align: middle;
    
    /* Must have height, or you can't expect FF to know
       how high to make its children */
    height: 100%;
    
    /* In WebKit and FF iframes cause scrollbars because they
       have a 'system' margin-bottom. In any case, it's useful
       to be able to position stuff outside the cell */
    overflow: visible;
    
    /* IE hacks */
    position: absolute !ie7;
    top: 50% !ie7;
}

.center-box {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    overflow: visible;
    margin: 0 auto;
    
    /* Acts as position parent for its content */
    position: relative;

    /* IE hacks */
    position: relative !ie7;
    top: -50% !ie7;
}
.center-box>iframe {
    width: 100%;
    height: 100%;
}

/* Ideally, all elements likely to be put in a centred layer should be listed here */
.center-box>div,
.center-box>form,
.center-box>img,
.center-box>object,
.center-box>embed,
.center-box>video,
.center-box>progress,
.center-box>canvas,
.center-box>.content {
    height: 100%;
}

/* Screen */
.screen {
    display: none;
}

/* Board items */
.item-layer {
    opacity:0;
    z-index:1000000;
    background-image: url('/images/icons/arrow_nav_128.png');
    background-position: center center;
    background-repeat: no-repeat;
}
.edit-mode .item-layer {
    display: block;
}