/* state.css
 * 
 * Takes care of state classes:
 *
 *   .loading     - State of items requested from a server
 *   .active      - Implies polar (on/off) state
 *   .state-xxx   - Implies multipolar (0/1/2/...) state
 *   .mode-xxx    - Implies multipolar (0/1/2/...) state
 *   .current     - Current implies that one out of a number of items is the current one
 *   .default     - Contains a pre-defined value
 *   .error       - Mostly used in forms
 * 
 * State classes must NOT have default style applied, they are there to indicate state only.
 * You can style specific nodes that happen to have state, or children of state nodes (for
 * instance, showing / hiding a .loading-icon when its parent has .loading), but the state
 * class itself must not have style applied.
 */

.loading-icon {
    display: none;
    background-position: 50% 50%;
    background-image: url('/images/loading-icon-16-white.gif');
    background-color: transparent;
    background-repeat: no-repeat;
    opacity: 0;
    
    /* TODO: If we want this to work, we'll have to get clever:
       feature detect transition, if it exists bind to "transitionend webkitTransitionEnd"
       a callback that set display: none after the transition instead of right away. */
    -webkit-transition: opacity 0.1s ease-in;
    -moz-transition:    opacity 1s ease-in;
    transition:         opacity 0.1s ease-in;
}
.loading.loading-icon,
.loading .loading-icon {
    display: block;
    opacity: 1;
}