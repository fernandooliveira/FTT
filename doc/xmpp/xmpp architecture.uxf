<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14

// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram.
// Edit element properties by modifying the text in this panel.
// Edit the files in the 'palettes' directory to create your own element palettes.
// Hold down ⌘ to select multiple elements.
// Press Del to delete elements.
// Press ⌘-c to copy an element, and to store the whole UML diagram to the system clipboard.
// Select "Custom elements &gt; New..." to create new element types.
//
// This text will be stored with each diagram;  use it for notes.</help_text><element><type>com.umlet.element.custom.Database</type><coordinates><x>360</x><y>430</y><w>320</w><h>140</h></coordinates><panel_attributes>webdoc database</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>380</x><y>480</y><w>130</w><h>40</h></coordinates><panel_attributes>users
uuid | salt</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>200</x><y>250</y><w>240</w><h>130</h></coordinates><panel_attributes>Web server (Rails)</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>630</x><y>250</y><w>240</w><h>130</h></coordinates><panel_attributes>XMPP server (Openfire)</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>390</x><y>30</y><w>290</w><h>140</h></coordinates><panel_attributes>Web browser</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.SimpleComponent</type><coordinates><x>430</x><y>80</y><w>230</w><h>70</h></coordinates><panel_attributes>webdoc.js

WebDoc.user_uuid = 1234
WebDoc.user_token = xxx</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Artefact</type><coordinates><x>320</x><y>320</y><w>110</w><h>50</h></coordinates><panel_attributes>secret key</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Artefact</type><coordinates><x>750</x><y>320</y><w>110</w><h>50</h></coordinates><panel_attributes>secret key</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>304</x><y>130</y><w>186</w><h>140</h></coordinates><panel_attributes>lt=&lt;-
login</panel_attributes><additional_attributes>36;120;36;70;166;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>560</x><y>130</y><w>200</w><h>140</h></coordinates><panel_attributes>lt=&lt;-&gt;
login</panel_attributes><additional_attributes>180;120;20;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>254</x><y>360</y><w>146</w><h>160</h></coordinates><panel_attributes>lt=-&gt;
add salt</panel_attributes><additional_attributes>46;20;46;140;126;140</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>490</x><y>360</y><w>295</w><h>170</h></coordinates><panel_attributes>lt=&lt;-
get salt</panel_attributes><additional_attributes>250;20;250;150;20;150</additional_attributes></element><element><type>com.umlet.element.base.Note</type><coordinates><x>10</x><y>10</y><w>360</w><h>150</h></coordinates><panel_attributes>login is done with username, pwd on rails server.
session is stored in a cookie.
Then when a document page is asked on the web 
server, server will generate a salt for logged user 
and create a user_token that is a SHA signature 
with secret key and salt. Those two values will 
be stored in javascript variable. 
And the salt will be stored in webdoc database

bg=yellow</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>400</x><y>130</y><w>175</w><h>140</h></coordinates><panel_attributes>lt=-&gt;
get document page</panel_attributes><additional_attributes>20;120;90;80;120;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>100</x><y>139</y><w>380</w><h>101</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>20;20;360;81</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>100</x><y>139</y><w>260</w><h>101</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>20;20;240;81</additional_attributes></element><element><type>com.umlet.element.base.Note</type><coordinates><x>750</x><y>20</y><w>360</w><h>150</h></coordinates><panel_attributes>When application need to login to XMPP, it will 
do a custom authentification on XMPP server. 
For that it will send user_uuid and user_token.
XMPP server will get the salt for user_uuid and 
generate the token with the secret key. if token 
from client match, authentification is done.

bg=yellow</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>660</x><y>150</y><w>280</w><h>80</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>260;20;20;60</additional_attributes></element><element><type>com.umlet.element.custom.Database</type><coordinates><x>820</x><y>440</y><w>200</w><h>130</h></coordinates><panel_attributes>openfire database</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>850</x><y>316</y><w>254</w><h>144</h></coordinates><panel_attributes>lt=&lt;-
get user with username = uuid</panel_attributes><additional_attributes>20;34;130;34;130;124</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>420</x><y>286</y><w>230</w><h>54</h></coordinates><panel_attributes>lt=&lt;-
synch user</panel_attributes><additional_attributes>210;34;20;34</additional_attributes></element></umlet_diagram>