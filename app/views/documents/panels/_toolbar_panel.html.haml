#toolbar.toolbar-panel.panel
  %a{ :href => "#webdoc-close" }
    %div.logo
  
  %ul.pages-tools.tools.thumbs.index.icons-only
    -# JBA we need to define ho to manage those new button
    %li>
      %a{ :href => "#webdoc-prev-page", :title => t('.prev') }
        = t('.prev')
    %li>
      %a{ :href => "#webdoc-next-page", :title => t('.next') }
        = t('.next')
    %li.mode-edit-show>
      %a{ :href => "#add-page", :title => t('.add_page') }
        = t('.add_page')
    
  %ul#view_tools.edit-tools.tools.thumbs.index.icons-only
    -# Whitespace is removed between lis to preserve layout
    %li>
      %a{ :href => "#zoom-out" , :title => t('.zoom_out') }
        = t('.zoom_out')
    %li>
      %a{ :href => "#zoom-in" , :title => t('.zoom_in') }
        = t('.zoom_in')
    %li.mode-edit-show>
      %a{ :href => "#themes-chooser" , :title => t('words.themes') }
        = t('.themes')
    -#%li>
    -#  %a.state-tool{ :href => "#move" , :title => t('.move') }
    -#    = t('.move')
  
  %ul#edit_tools.edit-tools.tools.thumbs.index.icons-only.mode-edit-show
    -# Whitespace is removed between lis to preserve layout
    %li>
      %a{ :href => "#undo" , :title => t('.undo') }
        = t('.undo')
    %li>
      %a{ :href => "#redo" , :title => t('.redo') }
        = t('.redo')
    %li>
      %a{ :href => "#to-back" , :title => t('.send_to_back') }
        = t('.send_to_back')
    %li>
      %a{ :href => "#to-front" , :title => t('.bring_to_front') }
        = t('.bring_to_front')
    %li>
      %a{ :href => "#delete" , :title => t('.delete') }
        = t('.delete')
  
  %ul#misc_tools.edit-tools.tools.thumbs.index.icons-only
    -# Whitespace is removed between lis to preserve layout
    %li.mode-edit-show>
      %a{ :href => "#insert-html" , :title => t('.html_tool') }
        = t('.html_tool')
    %li.mode-edit-show>
      %a{ :href => "#insert-iframe" , :title => t('.iframe_tool') }
        = t('.iframe_tool')
    %li.mode-edit-show>
      %a{ :href => "#insert-text" , :title => t('.text_tool') }
        = t('.text_tool')
    -if !Rails.env.production?
      %li.mode-edit-show>
        %a{ :href => "#insert-os-gadget" , :title => t('.os_gadget_tool') }
          = t('.os_gadget_tool')        

  %ul#misc_tools.edit-tools.group-tools.tools.thumbs.index.icons-only
    -# Whitespace is removed between lis to preserve layout
    %li.mode-edit-show>
      %a.state-tool{ :href => "#select" , :title => t('.select') }
        = t('.select')
    %li>
      %a.state-tool{ :href => "#move" , :title => t('.move') }
        = t('.move')
    %li.mode-edit-show>
      %a.state-tool{ :href => "#draw" , :title => t('.drawing_tool') }
        = t('.drawing_tool')
        %div.draw-port
          %div.draw-size.draw-color

  %ul.control-tools.mode-embed-hide.tools.thumbs.index.icons-only
    %li>
      %a{ :href => "#open-browser", :title => 'Open Browser' } Open Browser
    
    %li>
      %a#debug-button{ :href => "#disable-html", :title => 'Disable HTML' } Disable HTML
    - if current_user.present?
      %li>
        %a{ :href => "#webdoc-duplicate", :title => t('.duplicate_document') } Duplicate webdoc
    %li>
      %a{ :href => "#webdoc-close", :title => 'Close document' }= t('.close')

  %ul.mode-tools.mode-embed-hide.tools.thumbs.index.icons-only
    %li>
      %a.state-mode{ :href => "#mode-edit", :title => 'Edit mode' }= t('.mode_edit')
    %li>
      %a.state-mode{ :href => "#mode-preview", :title => 'Preview mode' }= t('.mode_preview')
  
  %div.page-details
    %span.webdoc-page-number.number 0
    %span.webdoc-separator= t('.of')
    %span.webdoc-page-total 0
  
  %div.document-title=@document.title
